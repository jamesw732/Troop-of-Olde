Implementation todo list.

===========================ACTIVE===============================
Fix powers not costing any energy



===================================NEXT================================================
Start adding some character assets and animations. Maybe start with just some premade stuff.

Move to a database instead of using json.

=========================================BACKLOG=================================================
Generic Code cleanup:
Replace some "if" checks and "get"s with try/except blocks. I rely too hard on crash errors,
I should instead leverage warnings that don't break the game.


Physics:
Implement momentum, make it be a list of the 5 most recent keyboard movement vectors. They are
averaged and added as a displacement factor if no keyboard inputs for that physics tick.
Add more raycasts for collision logic.
Use a loop for raycasts to not collide through concave intersections
Improve wall collision logic, namely removing ability to jump up walls.
Jumping is sometimes very buggy, but sometimes fine?


Combat:
Neglected formulas:
- probability to upgrade skill
- hit chance/accuracy
- dual wield attack rate

Incomplete subcontent:
- Weapon types
- Effects/powers, not nearly enough types at the moment.

Incomplete stat implementations:
- Energy
- Armor
- All the modifiers
- Regeneration
- Hardiness


Character:
Stats object should probably have a more elegant interaction with Characters. Would
be nice to unify Stats with all the different Effect types.


Powers:
Add a channeled power.
Need to add client-side reconciliation for powers
Add a UI window showing persistent powers
Make persistent powers unique per character
Improve powers/effects database, will need to think about this a lot


UI:
UI is quite incomplete, there is a lot of helpful information that should be tracked by the UI:
- player's target's health
- in combat/not
- persistent effects

Some missing functionality:
- Loot window
- Hover and right click tooltips, which will be the primary visual guide for the UI
- Swapping of action bar slots
- Destroying items

There are some bugs as well:
- Scrolling with mousewheel while scrollbar is full results in division by zero
- Transparency handling for the game window is buggy since the scrollbar has its own collider.
Basically, the current handling for mouse enter/exit is fragile - entering on and exiting from a
child entity with a collider doesn't correctly trigger the transparency change. Unclear how to fix
this, worst case can remove the collider.
- There's also a bug with new text entering the game window with the wrong transparency. I think
text should probably be ignored by set_alpha altogether.


Database:
Move to sql


Documentation:
Ideally, I want some big tex files that document everything important, such as code architecture,
formulas used, philosophy, game mechanics, class content. These files essentially serves as the
implementation definition.

Also, should eventually move things onto Github issues once the repository is more stable.


Tests:
Tests currently are very broken and limited in functionality. Codebase is too volatile to sustain tests
at the moment, once things are more stable it will be a good idea to test things.
Could also consider test-driven development, where I should understand the interface of the code before
writing the code.



=====================================DISTANT==============================================
- Save system
- Character/item models/textures
- World building; terrain, textures, buildings
- NPC logic
- Music
- Icons
- UI Art
