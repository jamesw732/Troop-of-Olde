This file contains a heap-like todo list, with the following priorities:

ACTIVE:
This is whatever I'm spending active development time on. Should only really have one thing here.

NEXT:
These are basically "next steps" in whatever overarching task I'm working on.
Things that are put here should not stay on here very long, either pushed into "ACTIVE" once
I decide it's time to work on it, or pushed back to "BACKLOG" when I realize I'm farther away than
I thought.

BACKLOG:
These are specific tasks that I'm not very close to accomplishing. Tasks on here might need to get
split up substantially before being approachable, and might require more thought before I know how they work.
Tasks in here get popped into "NEXT" or "RIGHT NOW" once I am ready to start implementing them.
This section will get pretty vast, so some organization is helpful.

DISTANT:
These are abstract ideas about things that will need to be done eventually, but I haven't thought about.
Generally, these are huge tasks that I need to seriously split up to be able to parse.


===========================ACTIVE===============================
Rewrite UI code using new UIWindow class.

Make changes I've been thinking about making, like simplifying all the player window stuff and keeping it
a fixed inventory/stats/skills window in the bottom right corner, like in OSRS.
Remove lexicon, add an action bar.

Along the way, may want to consolidate the game window as well.


===================================NEXT================================================
Add individual cooldowns for powers, and animations for cooldowns/gcd

Add more types of powers.
Want one of each of the following:
Instant enchantment (a heal spell),
Persistent enchantment (a buff),
Persistent curse (a debuff)
Channeled enchantment (a channeled heal)
Channeled curse (a channeled damage spell)


Remove stuff from update functions. Take UIWindow dragging as an example, update is dodged by moving
the body of an "if" block to a function, creating a Sequence for that function, and starting/stopping
the sequence rather than setting the "if" condition to True/False.
This is much more robust and doesn't necessitate calling update unnecessarily.


=========================================BACKLOG=================================================
Physics:
Fix physics bugs. Walking into npc, jumping head first into the side of a ceiling
Client side prediction and server authoritative physics. Fixed timestep physics.

Combat/Character:
Neglected formulas:
- probability to upgrade skill
- hit chance/accuracy
- dual wield attack rate

Incomplete subcontent:
- Weapon types
- Effects/powers, not nearly enough types at the moment.

Incomplete stat implementations:
- Energy
- Armor
- All the modifiers
- Regeneration
- Hardiness

UI:
In general, a lot of the UI will be reconsidered as I get a better idea of what the final product will
look like. The current UI is very much a baseline. Current UI could be more optimized, primarily by
changing to a paradigm that uses Sequences and fixed updates rather than the update function, but
this is very low priority unless it affects performance. If it affects performance, it could be a bottleneck
to using Ursina.

Otherwise, there are some definite changes:
Hover and right click tooltips will be the primary visual guide for the UI, this is definitely something
that could be implemented right away.
Having lots of entities/colliders really slows down the game. It would be better to group the colliders
together.


Database:
Move to sql


Documentation:
Ideally, I want some big tex files that document everything important, such as code architecture, formulas used,
philosophy, game mechanics, class content. These files essentially serves as the implementation definition.

Also, should eventually move things onto Github issues once the repository is more stable.


Tests:
Tests currently are very broken and limited in functionality. Codebase is too volatile to sustain tests
at the moment, once things are more stable it will be a good idea to test things.
Could also consider test-driven development, where I should understand the interface of the code before
writing the code.




=====================================DISTANT==============================================
- Save system
- Icons for items/powers/etc
- Character models - Blender (AI?)
- Character textures - Blender (AI?)
- World terrain - Perlin noise (+ Panda3D or maybe handwritten)
- World structures - Blender (AI?)
- World textures - Blender builtin https://cloud.blender.org/p/textures/5813449c1f474213fb4babc5
